/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-09-22 21:21:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Tomcat WebSocket</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <form>\n");
      out.write("        <input id=\"message\" type=\"text\">\n");
      out.write("        <input onclick=\"wsSendMessage();\" value=\"Echo\" type=\"button\">\n");
      out.write("        <input onclick=\"wsCloseConnection();\" value=\"Disconnect\" type=\"button\">\n");
      out.write("    </form>\n");
      out.write("    <br>\n");
      out.write("    <textarea id=\"echoText\" rows=\"5\" cols=\"30\"></textarea>\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("        var webSocket = new WebSocket(\"ws://localhost:8080/test/websocketendpoint\");\n");
      out.write("        var echoText = document.getElementById(\"echoText\");\n");
      out.write("        echoText.value = \"\";\n");
      out.write("        var message = document.getElementById(\"message\");\n");
      out.write("        webSocket.onopen = function(message){ wsOpen(\"hi\");};\n");
      out.write("        webSocket.onmessage = function(message){ wsGetMessage(message);};\n");
      out.write("        webSocket.onclose = function(message){ wsClose(message);};\n");
      out.write("        webSocket.onerror = function(message){ wsError(message);};\n");
      out.write("        function wsOpen(message){\n");
      out.write("            echoText.value += \"Connected ... \\n\";\n");
      out.write("        }\n");
      out.write("        function wsSendMessage(){\n");
      out.write("            webSocket.send(message.value);\n");
      out.write("            echoText.value += \"Message sended to the server : \" + message.value + \"\\n\";\n");
      out.write("            message.value = \"\";\n");
      out.write("        }\n");
      out.write("        function wsCloseConnection(){\n");
      out.write("            webSocket.close();\n");
      out.write("        }\n");
      out.write("        function wsGetMessage(message){\n");
      out.write("            echoText.value += \"Message received from to the server : \" + message.data + \"\\n\";\n");
      out.write("        }\n");
      out.write("        function wsClose(message){\n");
      out.write("            echoText.value += \"Disconnect ... \\n\";\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function wsError(message){\n");
      out.write("            echoText.value += \"Error ... \\n\";\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
